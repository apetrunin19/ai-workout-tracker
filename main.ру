import json
from utils.calculator import calculate_stats
from utils.visualizer import plot_progress
from utils.exporter import export_csv

WORKOUT_FILE = "workouts/sample_data.json"

def load_workouts():
    try:
        with open(WORKOUT_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return []

def save_workouts(data):
    with open(WORKOUT_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

def add_workout(workouts, workout):
    workouts.append(workout)
    save_workouts(workouts)

if __name__ == "__main__":
    workouts = load_workouts()
    add_workout(workouts, {"type":"run","distance_km":5.2,"time_min":27,"calories":350})
    stats = calculate_stats(workouts)
    print("üìä Stats:", stats)
    plot_progress(workouts)             # –ø–æ–∫–∞–∂–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –ª–æ–∫–∞–ª—å–Ω–æ
    export_csv(workouts, "workouts.csv")

## Install & Run
```bash
python3 -m venv .venv
source .venv/bin/activate   # Windows: .venv\Scripts\activate
pip install -r requirements.txt
python main.py

from utils.exporter import export_csv
# ...
export_csv(workouts, "workouts.csv")

from utils.visualizer import (
    plot_progress, plot_pace, plot_hist_distance, plot_by_type, plot_weekly_totals
)

# ...–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ workouts –∏ —Ä–∞—Å—á—ë—Ç–∞ stats:
plot_progress(workouts, show=False, save_path="docs/progress.png")
plot_pace(workouts, rolling=3, show=False, save_path="docs/pace.png")
plot_hist_distance(workouts, bins=8, show=False, save_path="docs/dist_hist.png")
plot_by_type(workouts, metric="distance_km", show=False, save_path="docs/by_type.png")
# –¥–ª—è –Ω–µ–¥–µ–ª—å–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–æ–±–∞–≤—å –ø–æ–ª–µ "date" –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (YYYY-MM-DD)
plot_weekly_totals(workouts, metric="distance_km", show=False, save_path="docs/weekly.png")
